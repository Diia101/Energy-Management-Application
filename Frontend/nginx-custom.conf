events {
    worker_connections 1024;
}

http {
    # Calea corectă către mime.types în containerul Docker
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Setează logurile de acces și eroare
    error_log /var/log/nginx/error.log warn;
    access_log /var/log/nginx/access.log;

    sendfile on;
    keepalive_timeout 65;

    # Load balancing pentru user-service
    upstream user-service {
        server user-service:8085;
    }

    # Load balancing pentru device-service
    upstream device-service {
        server device-service:8081;
    }

    # Load balancing pentru measurements-service
    upstream measurements-service {
        server measurements-service:8082;
    }

    # Load balancing pentru frontend
    upstream frontend {
        server frontend:3000;
    }

    server {
        listen 80;
        server_name localhost;

        # Redirecționează traficul pentru frontend
        location / {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Redirecționează traficul pentru user-service
        location /user-service/ {
            proxy_pass http://user-service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            add_header Access-Control-Allow-Origin *;
            add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
            add_header Access-Control-Allow-Headers 'Origin, Content-Type, Accept, Authorization';
        }

        # Redirecționează traficul pentru device-service
        location /device-service/ {
            proxy_pass http://device-service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Redirecționează traficul pentru measurements-service
        location /measurements-service/ {
            proxy_pass http://measurements-service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
}
